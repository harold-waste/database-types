{"version":3,"sources":["../../src/utilities/normalizeColumns.js"],"names":["unnormalizedColumns","normalizedColumns","map","column","valueIsNullable","isNullable","columnName","databaseType","dataType","nullable","tableName"],"mappings":";;;;;;kBAOgBA,mBAAD,IAA6F;AAC1G,QAAMC,oBAAoBD,oBAAoBE,GAApB,CAAyBC,MAAD,IAAY;AAC5D,UAAMC,kBAAkBD,OAAOE,UAAP,KAAsB,KAA9C;;AAEA,WAAO;AACLC,kBAAYH,OAAOG,UADd;AAELC,oBAAcJ,OAAOK,QAFhB;AAGLC,gBAAUL,eAHL;AAILM,iBAAWP,OAAOO;AAJb,KAAP;AAMD,GATyB,CAA1B;;AAWA,SAAOT,iBAAP;AACD,C","file":"normalizeColumns.js","sourcesContent":["// @flow\n\nimport type {\n  ColumnType,\n  UnnormalizedColumnType\n} from '../types';\n\nexport default (unnormalizedColumns: $ReadOnlyArray<UnnormalizedColumnType>): $ReadOnlyArray<ColumnType> => {\n  const normalizedColumns = unnormalizedColumns.map((column) => {\n    const valueIsNullable = column.isNullable === 'YES';\n\n    return {\n      columnName: column.columnName,\n      databaseType: column.dataType,\n      nullable: valueIsNullable,\n      tableName: column.tableName\n    };\n  });\n\n  return normalizedColumns;\n};\n"]}